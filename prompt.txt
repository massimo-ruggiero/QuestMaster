You are a PDDL expert. You will be given a narrative file (`lore`) describing a quest. This file contains:
  - **Quest Description**: includes the initial state, goal, context, and obstacles.  
  - **Branching Factor**: defines the minimum and maximum number of available actions per narrative state.  
  - **Depth Constraints**: define the minimum and maximum number of plan steps required to reach the goal.  

## üéØ Your Task
Extract the necessary elements from the lore and generate **only** two PDDL sections. Your output must strictly follow the format below:
  <domain> 
    ...full PDDL domain definition... 
  </domain> 
  <problem> 
    ...full PDDL problem definition... 
  </problem> 

## ‚ö†Ô∏è IMPORTANT
- Your generated PDDL must produce a valid plan that respects every constraint provided in the lore, ESPECIALLY the branching factor and depth limits.
- Use only valid PDDL syntax.
- You may create new predicates and types, but each predicate must be uniquely named and clearly defined.
- Each precondition or effect must be expressed individually (e.g., ‚Äúobject is washed and heated‚Äù -> two separate conditions).
- Do not reuse predicate names with different parameters.
- Predicate and action names must be intuitive and semantically aligned with the story world.
- You are modeling the behavior of an AI planner acting in a story world. You define valid actions by specifying:
  1. **Preconditions**: what must be true to perform the action
  2. **Effects**: how the world changes after the action
  You can take inspiration from classical planning domains like BlocksWorld, but you must fully ground the logic in the story context.

## üí° Some Examples

---- EXAMPLE 1: -----
Q: ## üìù Input

Based on the following lore, generate the domain and problem files as required.

LORE INPUT:
```
# Lore Document: The Lost Artifact

## Quest Description
In the desert kingdom of Zahara, rumors speak of an ancient artifact buried beneath the sands‚Äîa jeweled scarab said to grant its bearer control over the winds. A daring explorer must uncover the scarab before a rival treasure hunter does, and escape the desert with the artifact intact.

## Initial State
‚Äì Explorer ‚ÄúArya‚Äù is at OasisVillage.  
‚Äì Arya carries MapFragmentA.  
‚Äì Sandstorm is inactive.  
‚Äì GuardianStatue at Ruins is dormant.  
‚Äì RivalHunter ‚ÄúKharun‚Äù is at CaravanCamp, unarmed.

## Goal
‚Äì Arya possesses JeweledScarab.  
‚Äì Arya is at OasisVillage.

## Obstacles
1. **Sandstorm**: may activate when crossing the dunes, preventing travel.  
2. **GuardianStatue**: awakens in the Ruins and blocks access to the burial chamber.  
3. **RivalHunter**: if encountered unprepared, will steal MapFragmentA.

## Branching Factor
Min: 2 actions per state  
Max: 3 actions per state

## Depth Constraints
Min steps: 5  
Max steps: 8

## World Background
The people of Zahara revere the scarab as a symbol of renewal. Legends tell that only someone pure of heart can wield its power; otherwise, the bearer is cursed. The desert holds hidden dangers: quicksand pits, ancient traps in the Ruins, and shifting sands that alter landmarks.
```

A: <domain>
(define (domain lost-artifact)
  (:requirements :strips :typing)
  (:types location item character)

  (:predicates
    (at ?a - character ?l - location)
    (has ?a - character ?i - item)
    (sandstorm-active)
    (guardian-awake)
    (guardian-dormant)
    (rival-armed)
    (rival-unarmed)
    (artifact-retrieved)
    (map-intact)
    (accessible ?from - location ?to - location)
    (artifact-location ?l - location)
  )

  (:action travel
    :parameters (?a - character ?from - location ?to - location)
    :precondition (and 
      (at ?a ?from)
      (accessible ?from ?to)
      (not (sandstorm-active))
    )
    :effect (and
      (not (at ?a ?from))
      (at ?a ?to)
    )
  )

  (:action activate-sandstorm
    :parameters ()
    :precondition ()
    :effect (sandstorm-active)
  )

  (:action retrieve-artifact
    :parameters (?a - character ?i - item ?l - location)
    :precondition (and 
      (at ?a ?l)
      (artifact-location ?l)
      (not (guardian-awake))
    )
    :effect (and
      (has ?a ?i)
      (artifact-retrieved)
    )
  )

  (:action awaken-guardian
    :parameters ()
    :precondition ()
    :effect (and
      (guardian-awake)
      (not (guardian-dormant))
    )
  )

  (:action disarm-rival
    :parameters (?a - character ?r - character ?l - location)
    :precondition (and
      (at ?a ?l)
      (at ?r ?l)
      (rival-armed)
    )
    :effect (and
      (rival-unarmed)
      (not (rival-armed))
    )
  )

  (:action steal-map
    :parameters (?r - character ?a - character ?i - item ?l - location)
    :precondition (and
      (at ?r ?l)
      (at ?a ?l)
      (has ?a ?i)
      (rival-unarmed)
    )
    :effect (and
      (not (has ?a ?i))
      (not (map-intact))
    )
  )

  (:action escape-desert
    :parameters (?a - character ?i - item ?l - location)
    :precondition (and
      (has ?a ?i)
      (at ?a ?l)
    )
    :effect ()
  )
)
</domain> 
<problem>
(define (problem lost-artifact-problem)
  (:domain lost-artifact)

  (:objects
    arya kharun - character
    oasisvillage caravancamp ruins dunes - location
    mapfragmenta jeweledscarab - item
  )

  (:init
    (at arya oasisvillage)
    (has arya mapfragmenta)
    (map-intact)
    (at kharun caravancamp)
    (rival-unarmed)
    (guardian-dormant)
    (not (sandstorm-active))
    (artifact-location ruins)

    (accessible oasisvillage dunes)
    (accessible dunes oasisvillage)

    (accessible dunes ruins)
    (accessible ruins dunes)

    (accessible dunes caravancamp)
    (accessible caravancamp dunes)
  )

  (:goal (and
    (has arya jeweledscarab)
    (at arya oasisvillage)
  ))
) 
</problem> 


---- EXAMPLE 2: -----
Q: ## üìù Input

Based on the following lore, generate the domain and problem files as required.

LORE INPUT:
```
# Lore Document: The Relic of the Sunken Temple

## 1. Quest Description
**Title:** The Relic of the Sunken Temple  
**Setting:**  
Beneath the waves off the coast of Thalara lies an ancient submerged temple, home to a powerful relic said to control the tides. When seismic tremors threaten coastal villages with devastating floods, a daring adventurer must dive into the deep, navigate underwater ruins, and reclaim the relic before catastrophe strikes.

### Initial State
- The protagonist boards a small dive vessel at Thalara Harbor.  
- The sea is stormy, visibility underwater is poor.  
- A local scholar warns of aggressive sea creatures guarding the temple‚Äôs entrance.

### Goal
- Retrieve the Tideheart Relic from the Sunken Temple‚Äôs inner sanctum and surface safely.

### Possible Obstacles
1. **Underwater Currents in the Coral Chasm**  
   ‚Äì Strong cross-currents may push the diver off course; require stabilizing gear or skillful swimming.  
2. **Collapsed Passage in the Eastern Hall**  
   ‚Äì Blocks direct route; must clear debris (strength), find alternate tunnel (exploration), or use explosives (risking damage).  
3. **Guardian Eels in the Sanctum**  
   ‚Äì Need to distract them (lure), sneak past in crevices (stealth), or confront them (combat).

## 2. Branching Factor
- **Minimum Actions per State:** 2  
- **Maximum Actions per State:** 4  

> *At each decision point, the player will choose between two to four actions (e.g., ‚ÄúDeploy an anchor line‚Äù / ‚ÄúInvestigate a side tunnel‚Äù / ‚ÄúClear rubble by hand‚Äù / ‚ÄúSet a timed explosive‚Äù).*

## 3. Depth Constraints
- **Minimum Steps to Goal:** 5  
- **Maximum Steps to Goal:** 9  

> *The narrative should guide the player through at least five and at most seven critical actions before they secure the relic.*
```

A: <domain>
(define (domain sunken-temple)
  (:requirements :strips :typing :equality)
  (:types
    location gear creature obstacle
  )
  (:constants
    thalara-harbor dive-vessel coral-chasm eastern-hall sanctum - location
    stabilizer                     - gear
    coral-currents collapsed-passage - obstacle
    guardian-eels                  - creature
  )
  (:predicates
    (at ?l - location)
    (has-gear ?g - gear)
    (stormy-sea)
    (poor-visibility)
    (cleared ?o - obstacle)
    (distracted ?c - creature)
    (creature-at ?c - creature ?l - location)
    (relic-secured)
    (safe-on-surface)
    (path-open ?from - location ?to - location)
    (visited ?l - location)
  )

  ;; 1. Embark on the dive vessel
  (:action embark
    :parameters ()
    :precondition (and
      (at thalara-harbor)
      (path-open thalara-harbor dive-vessel)
    )
    :effect (and
      (not (at thalara-harbor))
      (at dive-vessel)
      (visited dive-vessel)
    )
  )

  ;; 2. Clear the Coral Chasm currents
  (:action deploy-stabilizer
    :parameters ()
    :precondition (and
      (at dive-vessel)
      (has-gear stabilizer)
      (not (cleared coral-currents))
    )
    :effect (cleared coral-currents)
  )

  ;; 3. Enter the Coral Chasm
  (:action enter-chasm
    :parameters ()
    :precondition (and
      (at dive-vessel)
      (path-open dive-vessel coral-chasm)
      (cleared coral-currents)
    )
    :effect (and
      (not (at dive-vessel))
      (at coral-chasm)
      (visited coral-chasm)
    )
  )

  ;; 4. Traverse the Eastern Hall
  (:action traverse-hall
    :parameters ()
    :precondition (and
      (at coral-chasm)
      (path-open coral-chasm eastern-hall)
    )
    :effect (and
      (not (at coral-chasm))
      (at eastern-hall)
      (visited eastern-hall)
    )
  )

  ;; 5. Clear the Collapsed Passage
  (:action clear-rubble
    :parameters ()
    :precondition (and
      (at eastern-hall)
      (not (cleared collapsed-passage))
    )
    :effect (cleared collapsed-passage)
  )

  ;; 6. Enter the Sanctum
  (:action enter-sanctum
    :parameters ()
    :precondition (and
      (at eastern-hall)
      (path-open eastern-hall sanctum)
      (cleared collapsed-passage)
    )
    :effect (and
      (not (at eastern-hall))
      (at sanctum)
      (visited sanctum)
    )
  )

  ;; 7. Deal with the Guardian Eels
  (:action fight-eels
    :parameters ()
    :precondition (and
      (at sanctum)
      (creature-at guardian-eels sanctum)
      (not (distracted guardian-eels))
    )
    :effect (distracted guardian-eels)
  )

  ;; 8. Retrieve the relic
  (:action retrieve-relic
    :parameters ()
    :precondition (and
      (at sanctum)
      (creature-at guardian-eels sanctum)
      (distracted guardian-eels)
    )
    :effect (relic-secured)
  )

  ;; 9. Surface safely
  (:action surface
    :parameters ()
    :precondition (and
      (at sanctum)
      (relic-secured)
    )
    :effect (safe-on-surface)
  )
)
</domain> 
<problem>
(define (problem retrieve-relic)
  (:domain sunken-temple)

  (:init
    ;; Starting conditions
    (at thalara-harbor)
    (has-gear stabilizer)
    (stormy-sea)
    (poor-visibility)
    (creature-at guardian-eels sanctum)

    ;; Connectivity
    (path-open thalara-harbor dive-vessel)
    (path-open dive-vessel coral-chasm)
    (path-open coral-chasm eastern-hall)
    (path-open eastern-hall sanctum)
  )

  (:goal (and
    (relic-secured)
    (safe-on-surface)
  ))
) 
</problem> 


---- EXAMPLE 3: -----
Q: ## üìù Input

Based on the following lore, generate the domain and problem files as required.

LORE INPUT:
```
# Lore Document: The Crystal of Ithar

## Quest Description

In the forgotten land of **Ithar**, ancient forces have begun to stir. The **Crystal of Ithar**, a magical relic maintaining the balance between light and shadow, has been stolen by the rogue sorcerer **Malrek**. Without it, darkness spreads across the realm.

The player assumes the role of **Elara**, a young ranger gifted with the Sight, who must retrieve the Crystal before the next eclipse, or the land will fall into eternal night.

### Initial State
- Elara is in the village of **Thandor**.
- The **Crystal** is located in **Malrek's Tower**.
- The path to the tower is blocked by a **collapsed bridge** and a **dark forest** haunted by cursed spirits.
- Elara has a **bow** but lacks the **light amulet** required to pass safely through the forest.

### Goal
- Retrieve the **Crystal of Ithar** and return it to **Thandor** before the eclipse.

### Obstacles
- Bridge must be rebuilt using wood from the forest.
- Spirits must be banished with the **light amulet**, found in the **Abandoned Temple**.
- Malrek must be defeated in his tower using a strategy that weakens his power.

### World Context
Ithar is a land of magic, ruins, and ancient temples. Powerful artifacts are hidden across the land, often protected by magical wards or guardians. Elara‚Äôs journey will require exploring, forging alliances, solving puzzles, and surviving dark forces.

---

## Branching Factor

- **Minimum Actions per State:** 2  
- **Maximum Actions per State:** 4

---

## Depth Constraints

- **Minimum Steps to Goal:** 5  
- **Maximum Steps to Goal:** 10

---
```

A: <domain>
(define (domain ithar-quest)
  (:requirements :strips :typing :negative-preconditions)

  ;;------------------ TYPES ------------------
  (:types character location item)

  ;;---------------- CONSTANTS ----------------
  (:constants
     thandor abandoned_temple dark_forest
     collapsed_bridge malreks_tower            - location
     bow light_amulet crystal_of_ithar         - item)

  ;;---------------- PREDICATES ---------------
  (:predicates
    (at ?c - character ?l - location)
    (connected ?from - location ?to - location)
    (has ?c - character ?i - item)
    (item-at ?i - item ?l - location)
    (wood_collected)
    (bridge_rebuilt)
    (spirits_banished)
    (malrek_defeated)
  )

  ;;---------------- ACTIONS ------------------
  (:action move
    :parameters (?p - character ?from - location ?to - location)
    :precondition (and (at ?p ?from) (connected ?from ?to))
    :effect (and (not (at ?p ?from)) (at ?p ?to))
  )

  (:action gather-wood
    :parameters (?p - character)
    :precondition (and (at ?p dark_forest)
                       (not (wood_collected)))
    :effect (wood_collected)
  )

  (:action find-amulet
    :parameters (?p - character)
    :precondition (and (at ?p abandoned_temple)
                       (item-at light_amulet abandoned_temple))
    :effect (and (has ?p light_amulet)
                 (not (item-at light_amulet abandoned_temple)))
  )

  (:action banish-spirits
    :parameters (?p - character)
    :precondition (and (at ?p dark_forest)
                       (has ?p light_amulet)
                       (not (spirits_banished)))
    :effect (spirits_banished)
  )

  (:action rebuild-bridge
    :parameters (?p - character)
    :precondition (and (at ?p collapsed_bridge)
                       (wood_collected)
                       (not (bridge_rebuilt)))
    :effect (and (bridge_rebuilt)
                 (connected collapsed_bridge malreks_tower)
                 (connected malreks_tower collapsed_bridge))
  )

  (:action defeat-malrek
    :parameters (?p - character)
    :precondition (and (at ?p malreks_tower)
                       (bridge_rebuilt)
                       (spirits_banished)
                       (has ?p bow)
                       (item-at crystal_of_ithar malreks_tower)
                       (not (malrek_defeated)))
    :effect (and (malrek_defeated)
                 (has ?p crystal_of_ithar)
                 (not (item-at crystal_of_ithar malreks_tower)))
  )

  (:action return-to-thandor
    :parameters (?p - character)
    :precondition (and (at ?p malreks_tower)
                       (has ?p crystal_of_ithar))
    :effect (and (not (at ?p malreks_tower))
                 (at ?p thandor))
  )
)
</domain> 
<problem>
(define (problem retrieve-crystal)
  (:domain ithar-quest)

  ;; Solo gli oggetti NON gi√† dichiarati come costanti
  (:objects
     elara   - character)

  (:init
     ;; stato iniziale
     (at elara thandor)
     (has elara bow)

     ;; oggetti posizionati nel mondo
     (item-at light_amulet abandoned_temple)
     (item-at crystal_of_ithar malreks_tower)

     ;; rete di percorsi esistenti (ponte ancora crollato)
     (connected thandor abandoned_temple)
     (connected abandoned_temple thandor)

     (connected thandor dark_forest)
     (connected dark_forest thandor)

     (connected abandoned_temple dark_forest)
     (connected dark_forest abandoned_temple)

     (connected dark_forest collapsed_bridge)
     (connected collapsed_bridge dark_forest)
  )

  (:goal
     (and (at elara thandor)
          (has elara crystal_of_ithar))
  )
) 
</problem> 

---   
